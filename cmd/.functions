# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_" || return;
}

function video2gif() {
    PNG_PALLETE=$(mktemp --suffix=.png)
    ffmpeg -i "$1" -filter_complex "[0:v] palettegen" "$PNG_PALLETE"
    ffmpeg -i "$1" -i "$PNG_PALLETE" -r 12 -s 320x180 -filter_complex "[0:v][1:v] paletteuse" "$2"
    rm "$PNG_PALLETE"
}

function video_rotate() {
    ffmpeg -i "$1" -vf "transpose=1,transpose=1" $2
}

function videos_rotate() {
    for i in "$@"; do
        ffmpeg -i "$i" -vf "transpose=1,transpose=1" "rot_$i"
    done
}

###############################################################################
# Sync functions
###############################################################################

function _mount_rsync() {
    ssh -i ~/.ssh/sync -t sync@eugene-andrienko.com 'pefs mount /home/sync/rsync /home/sync/rsync && pefs addkey -a aes256 -c /home/sync/rsync || pefs umount /home/sync/rsync'
}

function _umount_rsync() {
    ssh -i ~/.ssh/sync sync@eugene-andrienko.com 'pefs umount /home/sync/rsync'
}

function _safe_rsync() {
    OPTIONS="-azPh --exclude-from=$HOME/rsync/.rsyncignore"

    rsync $OPTIONS -e 'ssh -i ~/.ssh/sync' $1 -ni $2 $3

    echo "$2" | grep -q 'sync@'
    if [ "$?" -eq 0 ]; then
        ASK="Sync these files from remote to local? [y/n] "
    else
        ASK="Sync these files from local to remote? [y/n] "
    fi

    read -p "$ASK" ANSWER
    if [ "$ANSWER" == "y" ]; then
        rsync $OPTIONS -e 'ssh -i ~/.ssh/sync' $1 $2 $3
    fi
}

function cloudsync() {
    OPTIONS="--update"
    _mount_rsync

    # remote -> local
    _safe_rsync "$OPTIONS" sync@eugene-andrienko.com:/home/sync/rsync/ ~/rsync
    # local -> remote
    _safe_rsync "$OPTIONS" ~/rsync/ sync@eugene-andrienko.com:/home/sync/rsync

    _umount_rsync
}

function cloudsync_force_local() {
    OPTIONS="--delete"
    _mount_rsync
    _safe_rsync "$OPTIONS" ~/rsync/ sync@eugene-andrienko.com:/home/sync/rsync
    _umount_rsync
}

function cloudsync_force_remote() {
    OPTIONS="--delete"
    _mount_rsync
    _safe_rsync "$OPTIONS" sync@eugene-andrienko.com:/home/sync/rsync/ ~/rsync
    _umount_rsync
}

###############################################################################
###############################################################################

function scanphoto_10x15() {
    if [ "$#" -ne 2 ]; then
        echo "scanphoto_10x15 PADDING_ZEROES_COUNT START_FROM"
        return
    fi
    START_FROM="$2"
    while true; do
        printf -v FILENAME "%0$1d" "$START_FROM"
        read -p "Press Enter or write photo description for scan new photo to $FILENAME.png " DESCRIPTION

        if [ "$DESCRIPTION" ]; then
            FILENAME="$FILENAME - $DESCRIPTION"
            echo "Photo will be saved to $FILENAME.png"
        fi
        scanimage --progress --resolution 1200 --mode Color -x 100 -y 150 --format png -o "$FILENAME.png"

        START_FROM=$((START_FROM+1))
    done
}

function scana4() {
    if [ "$#" -ne 2 ]; then
        echo "scana4 PADDING_ZEROES_COUNT START_FROM"
        return
    fi
    START_FROM="$2"
    while true; do
        printf -v FILENAME "%0$1d" "$START_FROM"
        read -p "Press Enter or document description for scan new document to $FILENAME.png " DESCRIPTION

        if [ "$DESCRIPTION" ]; then
            FILENAME="$FILENAME - $DESCRIPTION"
            echo "Document will be saved to $FILENAME.png"
        fi
        scanimage --progress --resolution 300 --mode Color -x 210 -y 297 --format png -o "$FILENAME.png"

        START_FROM=$((START_FROM+1))
    done
}

