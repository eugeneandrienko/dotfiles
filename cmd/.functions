# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_" || return;
}

function video2gif() {
    PNG_PALLETE=$(mktemp --suffix=.png)
    ffmpeg -i "$1" -filter_complex "[0:v] palettegen" "$PNG_PALLETE"
    ffmpeg -i "$1" -i "$PNG_PALLETE" -r 12 -s 320x180 -filter_complex "[0:v][1:v] paletteuse" "$2"
    rm "$PNG_PALLETE"
}

function hotkeys() {
    exec 3>&1
    HOTKEYS_COMMON_OPTIONS="--backtitle Hotkeys --title Hotkeys --no-collapse --no-shadow --no-tags --scrollbar"
    HOTKEYS_LIST_OF_PROGRAMS="emacs Emacs i3wm I3WM mutt Mutt vim Vim rtorrent RTorrent"
    RESULT=$(dialog $HOTKEYS_COMMON_OPTIONS --menu "Select a program to show it's hotkeys" 20 30 15 $HOTKEYS_LIST_OF_PROGRAMS 2>&1 1>&3)
    RETVAL=$?
    exec 3>&-

    if [ "$RETVAL" -eq "0" ]; then
        case "$RESULT" in
            "emacs")
                 HOTKEYS_TEXT="C-z   - switch keyboard language
M-g   - go to line
C-x 2 - horizontal split
C-x 3 - vertical split

M-x template-latex-report       - create LaTeX report in current catalog
M-x template-latex-presentation - create LaTeX presentation in current
                                  catalog
C-c C-c                         - build or view LaTeX source
F12                             - enable syntax checking (by aspell)

M-x cider-jack-in     - jump into REPL in current directory
C-u M-x cider-jack-in - jump into REPL in given directory
C-c C-z               - switch between REPL and Clojure file
C-c C-e               - eval last S-expression
C-c C-k               - eval current buffer
C-c C-l               - eval Clojure file
C-c M-:               - fast eval Clojure S-expression
C-c M-;               - fast eval S-expression and paste result in buffer
C-c C-v .             - fast eval function under the cursor
C-c C-q               - Close REPL connection
C-c M-n r             - reload modified Clojure files in classpath

M-x cider-classpath   - list classpath
C-u C-M-x             - activate debugger on the current S-expression
C-c M-t v             - toggle function tracing
C-c M-t n             - toggle function tracing in entire namespace

C-q (     - add ( bracket without bracket autocomplete
C-q )     - add ) bracket without bracket autocomplete
C-u <DEL> - delete bracket without autocomplete"
                ;;
			"i3wm")
                HOTKEYS_TEXT="Win+z - split in horizontal orientation
Win+v - split in vertical orientation
Win+a - focus parent container
Win+c - focus child container

Win+s - stacking container layout
Win+w - tabbed container layout
Win+e - toggle split layout

Win+Right_arrow - move window to right display
Win+Left_arrow  - move window to left display

Win+Shift+Space - toggle tiling / floating
Win+Space       - change focus between tiling / floating

Win+q       - open scratchpad
Win+Shift+- - move to scratchpad

Win+Shift+x - lock screen

Win+m - set mark
Win+g - goto mark"
			;;
            "mutt")
                HOTKEYS_TEXT="Under construction"
                ;;
            "vim")
                HOTKEYS_TEXT="C-c n - show line numbers
C-c c - show 80th symbol line"
                ;;
            "rtorrent")
                HOTKEYS_TEXT="C-d   - stop or remove stopped torrent
C-s   - start download
+     - increase priority
-     - decrease priority
Space - change file priority
C-r   - hash check of torrent
a     - increase the upload throttle by 1 KB
s     - increase the upload throttle by 5 KB
d     - increase the upload throttle by 50 KB
z     - decrease the upload throttle by 1 KB
x     - decrease the upload throttle by 5 KB
c     - decrease the upload throttle by 50 KB
A     - increase the download throttle by 1 KB
S     - increase the download throttle by 5 KB
D     - increase the download throttle by 50 KB
Z     - decrease the download throttle by 1 KB
X     - decrease the download throttle by 5 KB
C     - decrease the download throttle by 50 KB"
                ;;
        esac
		echo "$HOTKEYS_TEXT"
    fi
}

function _mount_rsync() {
    ssh -i ~/.ssh/sync -t sync@eugene-andrienko.com 'pefs mount /home/sync/rsync /home/sync/rsync && pefs addkey -a aes256 -c /home/sync/rsync || pefs umount /home/sync/rsync'
}

function _umount_rsync() {
    ssh -i ~/.ssh/sync sync@eugene-andrienko.com 'pefs umount /home/sync/rsync'
}

function _safe_rsync() {
    OPTIONS="-azPh --exclude=.pefs.db"

    rsync $OPTIONS -e 'ssh -i ~/.ssh/sync' $1 -n $2 $3

    echo "$2" | grep -q 'sync@'
    if [ "$?" -eq 0 ]; then
        ASK="Sync these files from remote to local? [y/n] "
    else
        ASK="Sync these files from local to remote? [y/n] "
    fi

    read -p "$ASK" ANSWER
    if [ "$ANSWER" == "y" ]; then
        rsync $OPTIONS -e 'ssh -i ~/.ssh/sync' $1 $2 $3
    fi
}

function cloudsync() {
    OPTIONS="--update"
    _mount_rsync

    # remote -> local
    _safe_rsync "$OPTIONS" sync@eugene-andrienko.com:/home/sync/rsync/ ~/rsync
    # local -> remote
    _safe_rsync "$OPTIONS" ~/rsync/ sync@eugene-andrienko.com:/home/sync/rsync

    _umount_rsync
}

function cloudsync_force_local() {
    OPTIONS="--delete"
    _mount_rsync
    _safe_rsync "$OPTIONS" ~/rsync/ sync@eugene-andrienko.com:/home/sync/rsync
    _umount_rsync
}

function cloudsync_force_remote() {
    OPTIONS="--delete"
    _mount_rsync
    _safe_rsync "$OPTIONS" sync@eugene-andrienko.com:/home/sync/rsync/ ~/rsync
    _umount_rsync
}

###############################################################################
###############################################################################

function scanphoto_10x15() {
    if [ "$#" -ne 2 ]; then
        echo "scanphoto_10x15 PADDING_ZEROES_COUNT START_FROM"
        return
    fi
    START_FROM="$2"
    while true; do
        printf -v FILENAME "%0$1d" "$START_FROM"
        read -p "Press Enter or write photo description for scan new photo to $FILENAME.png " DESCRIPTION

        if [ "$DESCRIPTION" ]; then
            FILENAME="$FILENAME - $DESCRIPTION"
            echo "Photo will be saved to $FILENAME.png"
        fi
        scanimage --progress --resolution 1200 --mode Color -x 100 -y 150 --format png -o "$FILENAME.png"

        START_FROM=$((START_FROM+1))
    done
}

